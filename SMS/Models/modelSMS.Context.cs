//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SMS.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class dbSMSNSEntities : DbContext
    {
        public dbSMSNSEntities()
            : base("name=dbSMSNSEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Branch> Branches { get; set; }
        public DbSet<CenterCode> CenterCodes { get; set; }
        public DbSet<CenterCodePartnerDetail> CenterCodePartnerDetails { get; set; }
        public DbSet<Country> Countries { get; set; }
        public DbSet<Course> Courses { get; set; }
        public DbSet<CourseSeriesType> CourseSeriesTypes { get; set; }
        public DbSet<CourseSubTitle> CourseSubTitles { get; set; }
        public DbSet<CourseType> CourseTypes { get; set; }
        public DbSet<Designation> Designations { get; set; }
        public DbSet<District> Districts { get; set; }
        public DbSet<EmailVerification> EmailVerifications { get; set; }
        public DbSet<Employee> Employees { get; set; }
        public DbSet<EmployeeCenter> EmployeeCenters { get; set; }
        public DbSet<Firm> Firms { get; set; }
        public DbSet<KnowHowN> KnowHowNS { get; set; }
        public DbSet<Menu> Menus { get; set; }
        public DbSet<MenuRole> MenuRoles { get; set; }
        public DbSet<MobileVerification> MobileVerifications { get; set; }
        public DbSet<MultiCourse> MultiCourses { get; set; }
        public DbSet<MultiCourseDetail> MultiCourseDetails { get; set; }
        public DbSet<QlfnMain> QlfnMains { get; set; }
        public DbSet<QlfnSub> QlfnSubs { get; set; }
        public DbSet<QlfnType> QlfnTypes { get; set; }
        public DbSet<Role> Roles { get; set; }
        public DbSet<ServiceTax> ServiceTaxes { get; set; }
        public DbSet<State> States { get; set; }
        public DbSet<StudentFeedback> StudentFeedbacks { get; set; }
        public DbSet<StudentProjectApproval> StudentProjectApprovals { get; set; }
        public DbSet<StudentReceiptSerialNo> StudentReceiptSerialNoes { get; set; }
        public DbSet<StudentRegistrationCourse> StudentRegistrationCourses { get; set; }
        public DbSet<StudentRelation> StudentRelations { get; set; }
        public DbSet<StudentSerialNo> StudentSerialNoes { get; set; }
        public DbSet<StudentWalkInn> StudentWalkInns { get; set; }
        public DbSet<StudentWalkInnCourse> StudentWalkInnCourses { get; set; }
        public DbSet<SubDistrict> SubDistricts { get; set; }
        public DbSet<TransactionDetail> TransactionDetails { get; set; }
        public DbSet<User> Users { get; set; }
        public DbSet<WhyN> WhyNS { get; set; }
        public DbSet<StudentLogin> StudentLogins { get; set; }
        public DbSet<StudentRegistration> StudentRegistrations { get; set; }
        public DbSet<StudentReceipt> StudentReceipts { get; set; }
        public DbSet<Group_CentreCode_Setting> Group_CentreCode_Setting { get; set; }
        public DbSet<DiscountSetting> DiscountSettings { get; set; }
    
        public virtual ObjectResult<GetDiscountSettings_Result> GetDiscountSettings(Nullable<int> centreCodeId, Nullable<int> dayPart, Nullable<int> monthParth, Nullable<int> yearPart)
        {
            var centreCodeIdParameter = centreCodeId.HasValue ?
                new ObjectParameter("centreCodeId", centreCodeId) :
                new ObjectParameter("centreCodeId", typeof(int));
    
            var dayPartParameter = dayPart.HasValue ?
                new ObjectParameter("dayPart", dayPart) :
                new ObjectParameter("dayPart", typeof(int));
    
            var monthParthParameter = monthParth.HasValue ?
                new ObjectParameter("monthParth", monthParth) :
                new ObjectParameter("monthParth", typeof(int));
    
            var yearPartParameter = yearPart.HasValue ?
                new ObjectParameter("yearPart", yearPart) :
                new ObjectParameter("yearPart", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDiscountSettings_Result>("GetDiscountSettings", centreCodeIdParameter, dayPartParameter, monthParthParameter, yearPartParameter);
        }
    
        public virtual ObjectResult<Edit_Get_DiscountSettings_Result> Edit_Get_DiscountSettings(string groupName)
        {
            var groupNameParameter = groupName != null ?
                new ObjectParameter("groupName", groupName) :
                new ObjectParameter("groupName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Edit_Get_DiscountSettings_Result>("Edit_Get_DiscountSettings", groupNameParameter);
        }
    }
}
